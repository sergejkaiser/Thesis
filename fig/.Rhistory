exgr.2005.manufac.graph[exgr.2005.manufac.graph$corness>140,]
membership(cluster.exgr.2005)
cluster.exgr.2005
str(cluster.exgr.2005)
cluster.exgr.2005$membership
cluster.exgr.2005$1
cluster.exgr.2005[[1]]
cluster.exgr.2005[[2]]
cluster.exgr.2005[[3]]
cluster.exgr.2005[[4]]
V(exgr.2005.manufac.graph)$prestige<-eigen_centrality(exgr.2005.manufac.graph)$vector
eigen_centrality(exgr.2005.manufac.graph)$vector
order(eigen_centrality(exgr.2005.manufac.graph)$vector)
sort(eigen_centrality(exgr.2005.manufac.graph)$vector)
sort(-eigen_centrality(exgr.2005.manufac.graph)$vector)
head(sort(-eigen_centrality(exgr.2005.manufac.graph)$vector))
head(sort(-eigen_centrality(exgr.2005.manufac.graph)$vector),10)
biconnected.components(exgr.2005.manufac.graph.undir)
?biconnected.components
hubeness nodes networks(exgr.2005.manufac.graph)
biconnected.components(exgr.2005.manufac.graph)
coreness(exgr.2005.manufac.graph, mode="all")
which(V(exgr.2005.manufac.graph)$name %in% exgr.2005.manufac.graph$coreness==143
which(V(exgr.2005.manufac.graph)$name %in% c(exgr.2005.manufac.graph$coreness==143)
)
which(V(exgr.2005.manufac.graph)$name %in% c(exgr.2005.manufac.graph$coreness>140))
which(V(exgr.2005.manufac.graph)$name %in% names(exgr.2005.manufac.graph[,coreness>140]))
names(exgr.2005.manufac.graph[,coreness>140])
exgr.2005.manufac.graph[,coreness>140]
V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)>140]
V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<100]
110/143
V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140]
plot(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140], vertex.color =members, vertex.size=0.05*V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140]$hub.s , layout=layout_with_fr(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140], repulserad = vcount(g)^2.8,
,vertex.la
bel.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140], vertex.color =members, vertex.size=0.05*V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140]$hub.s , layout=layout_with_fr(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140], repulserad = vcount(g)^2.8,
,vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
)
plot(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140], vertex.color =members, vertex.size=0.05*V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140]$hub.s , layout=layout_with_fr(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140], repulserad = vcount(g)^2.8, vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5))
plot(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140], vertex.color =members, vertex.size=0.05*V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140]$hub.s , layout=layout_with_fr(V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140]))
induced_subgraph(USairports, inCal)
induced_subgraph(exgr.2005.manufac.graph, subgraph)
subgraph<-V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)<140]
induced_subgraph(exgr.2005.manufac.graph, subgraph)
low.coreness<-induced_subgraph(exgr.2005.manufac.graph, subgraph)
plot(low.coreness, vertex.color =members, vertex.size=0.05*low.coreness$hub.s , layout=layout_with_fr(low.coreness, repulserad = vcount(g)^2.8,
,vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5))
plot(low.coreness, vertex.color =members, vertex.size=0.05*low.coreness$hub.s , layout=layout_with_fr(low.coreness, repulserad = vcount(g)^2.8, vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5))
plot(low.coreness, vertex.color =members, vertex.size=0.05*low.coreness$hub.s , layout=layout_with_fr(low.coreness, repulserad = vcount(g)^2.8), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(low.coreness, vertex.size=0.05*low.coreness$hub.s , layout=layout_with_fr(low.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
low.coreness$hub.s
low.coreness$hub.s<-hub_score(low.coreness)
plot(low.coreness, vertex.size=0.05*low.coreness$hub.s , layout=layout_with_fr(low.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
hub_score(low.coreness)
low.coreness$hub.s<-hub_score(low.coreness)$vector
tikz(file = "low_coreness.tex")
plot(low.coreness, vertex.size=0.05*low.coreness$hub.s , layout=layout_with_fr(low.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
dev.off()
plot(low.coreness, vertex.size=0.05*low.coreness$hub.s , layout=layout_with_fr(low.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(low.coreness, vertex.size=10*low.coreness$hub.s , layout=layout_with_fr(low.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
subgraph.2<-V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)>140]
high.coreness<-induced_subgraph(exgr.2005.manufac.graph, subgraph.2)
high.coreness$hub.s<-hub_score(high.coreness)$vector
plot(high.coreness, vertex.size=10*low.coreness$hub.s , layout=layout_with_fr(low.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(high.coreness, vertex.size=10*low.coreness$hub.s , layout=layout_nicely(low.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_nicely(high.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_lgl(high.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_lgl(high.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.5)
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_lgl(high.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.width = 0.2)
?plot.igraph
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_lgl(high.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.arrow.size=0.1,edge.width = 0.2)
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_grid_fr(high.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.arrow.size=0.1,edge.width = 0.2)
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_drl(high.coreness), vertex.label.dist = 0.5, vertex.label.cex = 0.7, edge.arrow.size=0.1,edge.width = 0.2)
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_fr(high.coreness), vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1,edge.width = 0.2)
tikz(file = "low_coreness.tex")
plot(low.coreness, vertex.size=10*low.coreness$hub.s , layout=layout_with_dgl(low.coreness),vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1, edge.width = 0.5)
dev.off()
tikz(file = "high_coreness.tex")
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_dgl(high.coreness), vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1,edge.width = 0.2)
dev.off()
tikz(file = "low_coreness.tex")
plot(low.coreness, vertex.size=10*low.coreness$hub.s , layout=layout_with_drl(low.coreness),vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1, edge.width = 0.5)
dev.off()
tikz(file = "high_coreness.tex")
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_drl(high.coreness), vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1,edge.width = 0.2)
dev.off()
subgraph.2<-V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)=>140]
subgraph.2<-V(exgr.2005.manufac.graph)[coreness(exgr.2005.manufac.graph)>=140]
tikz(file = "high_coreness.tex")
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_drl(high.coreness), vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1,edge.width = 0.2)
dev.off()
tikz(file = "low_coreness.pdf")
plot(low.coreness, vertex.size=10*low.coreness$hub.s , layout=layout_with_drl(low.coreness),vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1, edge.width = 0.5)
dev.off()
tikz(file = "high_coreness.pdf")
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_drl(high.coreness), vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1,edge.width = 0.2)
dev.off()
tikz(file = "low_coreness.tikz")
plot(low.coreness, vertex.size=10*low.coreness$hub.s , layout=layout_with_drl(low.coreness),vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1, edge.width = 0.5)
dev.off()
tikz(file = "high_coreness.tikz")
plot(high.coreness, vertex.size=10*high.coreness$hub.s , layout=layout_with_drl(high.coreness), vertex.label.dist = 0.6, vertex.label.cex = 0.5, edge.arrow.size=0.1,edge.width = 0.2)
dev.off()
tikz(file="k-core.tikz")
plot( x=cores$k.core, y=cores$cum.rel.freq, pch=19, cex=1.2,  col="orange",
xlab="k-core", ylab="Cumulative Frequency", main="Cummulative distribution of k-cores")
dev.off()
tikz(file="degree_distr.tikz")
par(mfrow=c(1,2))
plot( x=0:max(V(exgr.2005.manufac.graph)$deg.in), y=1-exgr.2005.manufac.graph$deg.dist.in , pch=19, cex=1.2, col="orange",
xlab="In Degree", ylab="Cumulative Frequency")
plot( x=0:max(V(exgr.2005.manufac.graph)$deg.out), y=1-exgr.2005.manufac.graph$deg.dist.out, pch=19, cex=1.2,  col="orange",
xlab="Out Degree", ylab="Cumulative Frequency")
dev.off()
library(reshape2)
library(car)
library(qpcR)
library(xtable)
library(Hmisc)
library(plyr)
library(foreign)
setwd("/Users/sergej/Google Drive/Send_liza/Results")
results<-read.dta("results_end_march_centr_ricardo.dta")
IND.70.74<-results[, c("COU", "IND", "z_dva_std")]
IND.70.74<-IND.70.74[IND.70.74$IND=="70T74",]
IND.70.74<-IND.70.74[order(-IND.70.74[,3]),]
IND.70.74.exgr<-results[, c("COU", "IND", "z_exgr_std")]
IND.70.74.exgr<-IND.70.74.exgr[IND.70.74.exgr$IND=="70T74",]
IND.70.74.exgr<-IND.70.74.exgr[order(-IND.70.74.exgr[,3]),]
IND.70.74.both<-c(IND.70.74.exgr,IND.70.74)
IND.70.74.both[[2]]<-NULL
IND.70.74.both[[4]]<-NULL
xtable(as.data.frame(IND.70.74.both))
setwd("/Users/sergej/Google Drive/Send_liza/06_05_small_sample")
nams<-names(results)
results.small<-read.dta("results_06_05_small.dta")
nams.small<-names(results.small)
nams.small<-nams.small[-c(2,3 )]
exclude<-c("revealed_productivity_dva_2005","revealed_productivity_exgr_2005","revealed_productivity_fddva_2005","in_centrality_exgr_2005"
,"in_centrality_VA_2005")
nams.small<-nams.small[ nams.small%nin%exclude]
res.small.long<-melt(results.small,id.vars=c("COU","IND"))
res.small.long<-res.small.long[res.small.long$variable %in% nams.small,]
res.small.long$variable<-factor(res.small.long$variable)
final.small<-lapply(split(res.small.long,res.small.long$variable),function(x) {
v<-dcast(x,COU~IND)
v})
bench.industry<-"01-05"
benchmark<-"ROW"
results$IND<-gsub("T","-", results$IND)
d<-melt(results,id.vars=c("COU","IND"))
# goal is to subset the data frames with in out centrality and z_i^k with the two normalizations, according to Leromain et al. (2014) and the standardization of Costinot et al.
#first create list of the relevant character strings
nams<-names(results)
nams<-nams[-c(2,3 )]
nams<-nams[!grepl("exgr_2005", nams)]
nams<-nams[!grepl("dva_2005", nams)]
nams<-nams[!grepl("DVA_2005", nams)]
names<-c(nams,"sector_dva")
d<-melt(results, id.vars=c("COU","IND"))
#subset melted data frame
d.sub<-d[d$variable%in%names,]
d.sub$variable<-factor(d.sub$variable)
#split data frame and apply cast, to obtain wide df
final<-lapply(split(d.sub,d.sub$variable),function(x) {
v<-dcast(x,COU~IND)
v})
#unlist the dfs
list2env(final ,.GlobalEnv)
#for a single variable at a time
data.prep<-function(df,var){
df.prep<- df[,"COU", "IND", deparse(substitute(var))]
df.prep.wide<-dcast(df.prep, COU ~ IND, value.var=deparse(substitute(var)))
return(df.prep.wide)
}
#correlation matrices for list varlist
corr.calc.list<-function(j, k, ls) {
if ( class(j)=="numeric" & class(k)=="numeric" & class(ls)=="list") {
#subset df drop first column with names of export countries, instead export countries as rownames
df1.cor<-as.data.frame(ls[[j]][,2:ncol(ls[[j]])])
#subset exclude rows with only ones and columns with only ones
df1.cor<- df1.cor[,colSums(df1.cor)!=ncol(df1.cor)]
df1.cor<- df1.cor[rowSums(df1.cor)!=nrow(df1.cor),]
rownames(df1.cor)<-ls[[j]][,1]
df2.cor<-as.data.frame(ls[[k]][,2:ncol(ls[[k]])])
#subset exclude rows with only ones and columns with only ones
df2.cor<- df2.cor[,colSums(df2.cor)!=ncol(df1.cor)]
df2.cor<- df2.cor[rowSums(df2.cor)!=nrow(df1.cor),]
rownames(df2.cor)<-ls[[k]][,1]
} else if (class(j)=="character" & class(k)=="character" & class(ls)=="list") {
j<-substitute(which(j==names(ls)))
j<-eval(j)
k<-substitute(which(k==names(ls)))
k<-eval(k)
df1.cor<-as.data.frame(ls[[j]][,2:ncol(ls[[j]])])
rownames(df1.cor)<-ls[[j]][,1]
df1.cor<- df1.cor[,colSums(df1.cor)!=nrow(df1.cor)]
df1.cor<- df1.cor[rowSums(df1.cor)!=ncol(df1.cor),]
df2.cor<-as.data.frame(ls[[k]][,2:ncol(ls[[k]])])
rownames(df2.cor)<-ls[[k]][,1]
df2.cor<- df2.cor[,colSums(df2.cor)!=nrow(df2.cor)]
df2.cor<- df2.cor[rowSums(df2.cor)!=ncol(df2.cor),]
} else{
stop("Only strings or numerical var ")
}
#calc association measures
df1.df2.spear<-diag(cor(t(df1.cor),t(df2.cor),method="spearman"))
df1.df2.kend<-diag(cor(t(df1.cor),t(df2.cor),method="kendall"))
Cor.test.spear.df1.df2<-matrix(NA, nrow = ncol(t(df1.cor)), ncol = 1)
Cor.test.kendall.df1.df2<-matrix(NA, nrow =  ncol(t(df1.cor)), ncol = 1)
#significance test spear
for (i in 1: ncol(df2.cor)) {
Cor.test.spear.df1.df2[i,1]<-as.vector(cor.test(as.vector(t(df1.cor)[,i]), as.vector(t(df2.cor)[,i]),   alternative = c("two.sided") ,method = c("spearman"))[[3]])
}
#significance test kendall
for (i in 2: nrow(df2.cor)) {
Cor.test.kendall.df1.df2[i,1]<-as.vector(cor.test(as.vector(t(df1.cor)[,i]), as.vector(t(df2.cor)[,i]),   alternative = c("two.sided") ,method = c("kendall"))[[3]])
}
names(Cor.test.spear.df1.df2)<-c('p_val_spearman')
names(Cor.test.kendall.df1.df2)<-c('p_val_kendall')
#make sure dimension fit
null<-c(0)
Cor.test.spear.df1.df2<-rbind(Cor.test.spear.df1.df2,null)
Cor.test.spear.df1.df2<-rbind(Cor.test.spear.df1.df2,null)
Cor.test.kendall.df1.df2<-rbind(Cor.test.kendall.df1.df2,null)
Cor.test.kendall.df1.df2<-rbind(Cor.test.kendall.df1.df2,null)
#mean of correlation results
avg.kend<-c(mean(diag(cor(df1.cor,df2.cor,method="kendall"))))
names(avg.kend)<-"avg."
avg.spear<-c(mean(diag(cor(df1.cor,df2.cor,method="spearman"))))
#median of correlation results
names(avg.spear)<-"avg."
med.kend<-c(median(diag(cor(df1.cor,df2.cor,method="kendall"))))
names(med.kend)<-"median"
med.spear<-c(median(diag(cor(df1.cor,df2.cor,method="spearman"))))
names(med.spear)<-"median"
median<-cbind(med.kend,med.spear)
avg<-cbind(avg.kend,avg.spear)
#bind everythin together
COU<-rownames(df1.cor)
Cor.kend.spear<-cbind(df1.df2.kend,df1.df2.spear)
Cor.kend.spear<-rbind(Cor.kend.spear,avg)
Cor.kend.spear<-rbind(Cor.kend.spear,median)
Cor.kend.spear.df<-as.data.frame(Cor.kend.spear)
Cor.test.df1.df2<-cbind( Cor.test.spear.df1.df2 ,Cor.test.kendall.df1.df2)
#include p-values
final.df1.df2<-cbind( Cor.kend.spear.df,Cor.test.df1.df2)
colnames(final.df1.df2)<-c("kendall", "spearman","pval-kend","pval-spear")
#return object
return(Cor.kend.spear.df)
}
vec<-c("sector_exgr","in_centrality_exgr_US_food","in_centrality_va_US_food",  "sector","z_exgr_std"  ,"in_centrality_exgr_std"  ,"z_dva_std","in_centr_va_std")
small.res<-list()
for (n in seq(1,8,2)) {
j<-ifelse(n==1,1,j+1)
small.res[[j]]<-corr.calc.list(j=vec[n], k=vec[n+1], ls=final.small)
}
names(small.res)<-c("exgr_us_food","dva_us_food","exgr_std","dva_std")
#correlation matrices for data frame objects
corr.calc<-function(df1, df2 ) {
df1.cor<-df.1[,2:ncol(df.1)]
rownames(df1.cor)<-df1[,1]
df2.cor<-df2[,2:ncol(df2)]
rownames(df2.cor)<-df2[,1]
df1.df2.spear<-diag(cor(t(df1.cor),t(df2.cor),method="spearman"))
df1.df2.kend<-diag(cor(t(df1.cor),t(df2.cor),method="kendall"))
Cor.test.spear.df1.df2<-matrix(NA, nrow = ncol(t(df1.cor)), ncol = 1)
Cor.test.kendall.df1.df2<-matrix(NA, nrow =  ncol(t(df1.cor)), ncol = 1)
for (i in 1: ncol(df2.cor)) {
Cor.test.spear.df1.df2[i,1]<-as.vector(cor.test(as.vector(t(df1.cor)[,i]), as.vector(t(df2.cor)[,i]),   alternative = c("two.sided") ,method = c("spearman"))[[3]])
}
for (i in 2: nrow(df2.cor)) {
Cor.test.kendall.df1.df2[i,1]<-as.vector(cor.test(as.vector(t(df1.cor)[,i]), as.vector(t(df2.cor)[,i]),   alternative = c("two.sided") ,method = c("kendall"))[[3]])
}
names(Cor.test.spear.df1.df2)<-c('p_val_spearman')
names(Cor.test.kendall.df1.df2)<-c('p_val_kendall')
null<-c(0)
Cor.test.spear.df1.df2<-rbind(Cor.test.spear.df1.df2,null)
Cor.test.spear.df1.df2<-rbind(Cor.test.spear.df1.df2,null)
Cor.test.kendall.df1.df2<-rbind(Cor.test.kendall.df1.df2,null)
Cor.test.kendall.df1.df2<-rbind(Cor.test.kendall.df1.df2,null)
avg.kend<-mean(diag(cor(df1.cor,df2.cor,method="kendall")))
avg.spear<-mean(diag(cor(df1.cor,df2.cor,method="spearman")))
med.kend<-median(diag(cor(df1.cor,df2.cor,method="kendall")))
med.spear<-median(diag(cor(df1.cor,df2.cor,method="spearman")))
median<-cbind(med.kend,med.spear)
rownames(median)<-c("median")
avg<-cbind(avg.kend,avg.spear)
rownames(avg)<-c("AVG")
Cor.kend.spear<-cbind(df1.df2.kend,df1.df2.spear)
Cor.kend.spear<-rbind(Cor.kend.spear,avg)
Cor.kend.spear<-rbind(Cor.kend.spear,median)
Cor.kend.spear.df<-as.data.frame(Cor.kend.spear)
Cor.test.df1.df2<-cbind( Cor.test.spear.df1.df2 ,Cor.test.kendall.df1.df2)
final.df1.df2<-cbind( Cor.kend.spear.df,Cor.test.df1.df2)
colnames(final.df1.df2)<-c("kendall", "spearman","pval-kend","pval-spear")
return(Cor.kend.spear.df)
}
#the varlist collects the df in the correct order to compute the association between them
varlist<- c("z_dva_std", "in_centr_dva_std", "z_exgr_std", "in_centr_exgr_std" ,"z_fddva_std","in_centr_fddva_std",
"sector_dva", "in_centr_dva_US_Food", "sector_exgr", "in_centr_exgr_US_Food", "sector_fd_va", "in_centr_fddva_US_Food",
"z_dva_std", "out_centr_dva_std","z_exgr_std", "out_centr_exgr_std","z_fddva_std", "out_centr_fddva_std",
"sector_dva", "out_centr_dva_US_Food","sector_exgr", "out_centr_exgr_US_Food","sector_fd_va", "out_centr_fddva_US_Food")
#collect the corr results in a list
library(Hmisc)
corr.results<-list()
for (i in seq(1,23,2)) {
#for normalization US Food subset the bench ind and country then calculate corr.results
j<-ifelse(i==1, 1,j+1)
corr.results[[j]]<-corr.calc.list(varlist[i],varlist[i+1],ls=final)
}
names(corr.results) <-c("spearman.kendall.dva.in.std", "spearman.kendall.exgr.int.std","spearman.kendall.fddva.in.std",
"spearman.kendall.dva.in.US", "spearman.kendall.exgr.in.US","spearman.kendall.fddva.in.US",
"spearman.kendall.dva.out.std", "spearman.kendall.exgr.out.std","spearman.kendall.fddva.out.std",
"spearman.kendall.dva.out.US", "spearman.kendall.exgr.out.US","spearman.kendall.fddva.out.US")
corr.calc(final.small$sector,final.small$in_centr_dva_std)
sp.kend.in.std<-as.data.frame(c(  corr.results[[1]], corr.results[[2]],corr.results[[3]]))
sp.kend.in.US<-as.data.frame(c(corr.results[[4]], corr.results[[5]],corr.results[[6]]))
sp.kend.out.std<-as.data.frame(c(corr.results[[7]], corr.results[[8]],corr.results[[9]]))
sp.kend.in.US<-as.data.frame(c(corr.results[[10]], corr.results[[11]],corr.results[[12]]))
df.exgr<-as.data.frame((  corr.results[[2]]))
df.exgr$df1.df2.spear<-as.numeric(levels(df.exgr$df1.df2.spear))[df.exgr$df1.df2.spear]
df.exgr$df1.df2.kend<-as.numeric(levels(df.exgr$df1.df2.kend))[df.exgr$df1.df2.kend]
df.exgr.m<- melt(df.exgr, "COU")
df.exgr.m$variable<-revalue(df.exgr.m$variable,c(df1.df2.kend="Kendall",df1.df2.spear="Spearman"))
df.exgr.US<-as.data.frame((  corr.results[[5]]))
df.exgr.US$df1.df2.spear<-as.numeric(levels(df.exgr.US$df1.df2.spear))[df.exgr.US$df1.df2.spear]
df.exgr.US$df1.df2.kend<-as.numeric(levels(df.exgr.US$df1.df2.kend))[df.exgr.US$df1.df2.kend]
df.exgr.US.m<- melt(df.exgr.US, "COU")
df.exgr.US.m$variable<-revalue(df.exgr.US.m$variable,c(df1.df2.kend="Kendall",df1.df2.spear="Spearman"))
df.exgr..m$variable<-revalue(df.exgr.m$variable,c(df1.df2.kend="Kendall",df1.df2.spear="Spearman"))
corr.results[[2]]
ggplot(as.data.frame(df.exgr.m[-c(44,45,89,90),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
#geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme( legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.76))+#mean
annotate("text", 4.5, 0.77, label = "avg. spearman")+
geom_hline(yintercept=0.608)+ #mean
annotate("text", 11, 0.58, label = "avg. kendall")
class(df.exgr$df1.df2.kend)
class(df.exgr$df1.df2.spear)
df.exgr<-as.data.frame((  corr.results[[2]]))
# df.exgr$df1.df2.spear<-as.numeric(levels(df.exgr$df1.df2.spear))[df.exgr$df1.df2.spear]
# df.exgr$df1.df2.kend<-as.numeric(levels(df.exgr$df1.df2.kend))[df.exgr$df1.df2.kend]
df.exgr$COU<-rownames(def.exgr.m)
df.exgr$COU<-rownames(def.exgr)
df.exgr$COU<-rownames(df.exgr)
class(df.exgr$df1.df2.spear)
df.exgr.m<- melt(df.exgr, "COU")
df.exgr.m$variable<-revalue(df.exgr.m$variable,c(df1.df2.kend="Kendall",df1.df2.spear="Spearman"))
df.exgr.US<-as.data.frame((  corr.results[[5]]))
# df.exgr.US$df1.df2.spear<-as.numeric(levels(df.exgr.US$df1.df2.spear))[df.exgr.US$df1.df2.spear]
# df.exgr.US$df1.df2.kend<-as.numeric(levels(df.exgr.US$df1.df2.kend))[df.exgr.US$df1.df2.kend]
df.exgr.US$COU<-rownames(def.exgr.US)
df.exgr.US.m<- melt(df.exgr.US, "COU")
df.exgr.US$COU<-rownames(df.exgr.US)
df.exgr.US.m<- melt(df.exgr.US, "COU")
df.exgr.US.m
ggplot(as.data.frame(df.exgr.US.m[-c(43,44,87,88),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme(
legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.86))+#mean
annotate("text", 4.5, 0.82, label = "avg. spearman")+
geom_hline(yintercept=0.72)+ #mean
annotate("text", 4.5, 0.68, label = "avg. kendall")
library(ggthemes)
ggplot(as.data.frame(df.exgr.US.m[-c(43,44,87,88),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme(
legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.86))+#mean
annotate("text", 4.5, 0.82, label = "avg. spearman")+
geom_hline(yintercept=0.72)+ #mean
annotate("text", 4.5, 0.68, label = "avg. kendall")
ggplot(as.data.frame(df.exgr.US.m[-c(43,44,87,88),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme(
legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.86))+#mean
annotate("text", 4.5, 0.82, label = "avg. spearman")+
geom_hline(yintercept=0.72)+ #mean
annotate("text", 4.5, 0.68, label = "avg. kendall")
ggplot(as.data.frame(df.exgr.US.m[-c(43,44,87,88),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme(
legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.86))+#mean
annotate("text", 4.5, 0.82, label = "avg. spearman")+
geom_hline(yintercept=0.72)+ #mean
annotate("text", 4.5, 0.68, label = "avg. kendall")
df.exgr.US.m$variable<-revalue(df.exgr.US.m$variable,c(df1.df2.kend="Kendall",df1.df2.spear="Spearman"))
df.exgr.m$variable<-revalue(df.exgr.m$variable,c(df1.df2.kend="Kendall",df1.df2.spear="Spearman"))
levels(df.exgr.m$variable)
ggplot(as.data.frame(df.exgr.m[-c(44,45,89,90),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme( legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.76))+#mean
annotate("text", 4.5, 0.77, label = "avg. spearman")+
geom_hline(yintercept=0.608)+ #mean
annotate("text", 11, 0.58, label = "avg. kendall")
ggplot(as.data.frame(df.exgr.m[-c(44,45,89,90),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme( legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.76))+#mean
annotate("text", 4.5, 0.77, label = "avg. spearman")+
geom_hline(yintercept=0.608)+ #mean
annotate("text", 11, 0.58, label = "avg. kendall")
setwd("/Users/sergej/Documents/Thesis-new/fig")
tikz(file = "kend_spear_RCA_cent_april_i.tex")
ggplot(as.data.frame(df.exgr.m[-c(44,45,89,90),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme( legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.76))+#mean
annotate("text", 4.5, 0.77, label = "avg. spearman")+
geom_hline(yintercept=0.608)+ #mean
annotate("text", 11, 0.58, label = "avg. kendall")
dev.off()
#Print Tables in Latex
setwd("/Users/sergej/Documents/Thesis-new/fig")
tikz(file = "kend_spear_RCA_cent_april_ii.tex")
ggplot(as.data.frame(df.exgr.US.m[-c(43,44,87,88),]),  aes(x=COU, y=value)) +
geom_line(aes(colour=variable, group=variable))+
geom_point()+
scale_x_discrete("Country")+
scale_y_continuous("Association", limit=c(-.2,1)) +
ggtitle(expression(atop("Association RCA and eigenvec. centrality")))+
theme_bw()+
scale_color_tableau("colorblind10",name = "")+
theme(
legend.position = "bottom", # legend location in graph
panel.grid.minor = element_blank(),
axis.title=element_text( size="10"),
axis.text.x=element_text(angle = 90, size=10))+
geom_hline(aes(yintercept=0.86))+#mean
annotate("text", 4.5, 0.82, label = "avg. spearman")+
geom_hline(yintercept=0.72)+ #mean
annotate("text", 4.5, 0.68, label = "avg. kendall")
dev.off()
